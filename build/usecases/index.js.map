{"version":3,"sources":["../../src/usecases/index.js"],"names":["editors","Category2Keyword","CountNotZero","CountZero","CountMinus","DeleteFoodDrivePlace","CsvEdit","DeleteNullItems","DeleteNullItemsNotUpdated","CountMinusByExpiryDate","FixedTw","Edit","EditAll","Object","values","map","e","customFactory","names","entries","filter","k","includes","console","log","arr"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMA,4BAAU;AACrBC,8CADqB;AAErBC,sCAFqB;AAGrBC,gCAHqB;AAIrBC,kCAJqB;AAKrBC,sDALqB;AAMrBC,4BANqB;AAOrBC,+CAPqB;AAQrBC,mEARqB;AASrBC,0DATqB;AAUrBC;AAVqB,CAAhB;;AAaA,IAAMC,sBAAOC,iBAAb;;kBAEQ,IAAIA,iBAAJ,CAAYC,OAAOC,MAAP,CAAcd,OAAd,EAAuBe,GAAvB,CAA2B;AAAA,SAAK,IAAIC,CAAJ,EAAL;AAAA,CAA3B,CAAZ,C;AAER,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SAC3B,IAAIN,iBAAJ,CAAYC,OAAOM,OAAP,CAAenB,OAAf,EACToB,MADS,CACF;AAAA;AAAA,QAAEC,CAAF;;AAAA,WAASH,MAAMI,QAAN,CAAeD,CAAf,CAAT;AAAA,GADE,EAETN,GAFS,CAEL,eAAO;AAAEQ,YAAQC,GAAR,YAAqBC,IAAI,CAAJ,CAArB,SAAkC,OAAOA,GAAP;AAAa,GAFnD,EAGTV,GAHS,CAGL;AAAA;AAAA,QAAGC,CAAH;;AAAA,WAAU,IAAIA,CAAJ,EAAV;AAAA,GAHK,CAAZ,CAD2B;AAAA,CAAtB","file":"index.js","sourcesContent":["import Category2Keyword from './Category2Keyword';\nimport CountNotZero from './CountNotZero';\nimport CountZero from './CountZero';\nimport CountMinus from './CountMinus';\nimport DeleteFoodDrivePlace from './DeleteFoodDrivePlace';\nimport CsvEdit from './CsvEdit';\nimport { DeleteNullItems, DeleteNullItemsNotUpdated } from './DeleteItems';\nimport CountMinusByExpiryDate from './CountMinusByExpiryDate';\nimport FixedTw from './FixedTw';\nimport EditAll from './EditAll';\n\nexport const editors = {\n  Category2Keyword,\n  CountNotZero,\n  CountZero,\n  CountMinus,\n  DeleteFoodDrivePlace,\n  CsvEdit,\n  DeleteNullItems,\n  DeleteNullItemsNotUpdated,\n  CountMinusByExpiryDate,\n  FixedTw,\n};\n\nexport const Edit = EditAll;\n\nexport default new EditAll(Object.values(editors).map(e => new e()));\n\nexport const customFactory = (names) =>\n  new EditAll(Object.entries(editors)\n    .filter(([k]) => names.includes(k))\n    .map(arr => { console.log(`# use ${arr[0]} #`); return arr; })\n    .map(([,e]) => new e()));\n"]}