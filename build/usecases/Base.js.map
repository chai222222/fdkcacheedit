{"version":3,"sources":["../../src/usecases/Base.js"],"names":["Base","Promise","resolve","val","undefined","length","parseInt","e","str","DATE_PATTERN","test","zaico","title","res","exec","_isLimitStr","limitIndex","_optIndex","OPTION_NAMES","LIMIT_DATE","optional_attributes","value","limit","m","match","targetName","Array","isArray","findIndex","name","idx","push","replace","dt","nTitle","_titleWithoutDate","_formatDate","mArr","syear","smonth","sday","d","Date","setMonth","getMonth","setDate","getDate","dtStr","trim","dstr","fmtIsDate","parse","getFullYear","slice","join","String","code","janLengthArr","includes","LIMIT","KEYWORD","PLACE_OF_FOODDRIVE","UNLIMIT_DATE","RegExp"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;IAEqBA,I;;;;;;;;;AAUnB;kCAMc,CACb;;AAJD;;;AAXA;;;;+BAiBW;AACT,aAAO,KAAP;AACD;;;8BAES,CACT;;;8BAES;AACR,aAAOC,QAAQC,OAAR,EAAP;AACD;;;0BAEKC,G,EAAK;AACT,UAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAOA,GAAP;AAC7B,UAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,eAAOC,SAAP;AACD;AACD,UAAID,IAAIE,MAAJ,KAAe,CAAnB,EAAsB,OAAO,CAAP;AACtB,UAAI;AACF,eAAOC,SAASH,GAAT,EAAc,EAAd,CAAP;AACD,OAFD,CAEE,OAAOI,CAAP,EAAU;AACV,eAAOH,SAAP;AACD;AACF;;;gCAEWI,G,EAAK;AACf,aAAOA,OAAOR,KAAKS,YAAL,CAAkBC,IAAlB,CAAuBF,GAAvB,CAAd;AACD;;;qCAEgBG,K,EAAO;AACtB,UAAI,OAAOA,MAAMC,KAAb,KAAuB,QAAvB,IAAmC,CAACD,MAAMC,KAA9C,EAAqD,OAAO,KAAP;AACrD,UAAMC,MAAM,aAAaC,IAAb,CAAkBH,MAAMC,KAAxB,CAAZ;AACA;AACA,aAAOC,OAAO,KAAKE,WAAL,CAAiBF,IAAI,CAAJ,CAAjB,CAAd;AACD;;;8BAESF,K,EAAO;AACf,UAAMK,aAAa,KAAKC,SAAL,CAAeN,KAAf,EAAsBX,KAAKkB,YAAL,CAAkBC,UAAxC,CAAnB;AACA,aAAOH,cAAc,CAAd,IAAmBL,MAAMS,mBAAN,CAA0BJ,UAA1B,EAAsCK,KAAzD,IAAkE,EAAzE;AACD;;;0CAEqBC,K,EAAO;AAC3B,UAAIC,IAAID,MAAME,KAAN,CAAY,eAAZ,CAAR;AACA,UAAI,CAACD,CAAL,EAAQA,IAAID,MAAME,KAAN,CAAY,sBAAZ,CAAJ;AACR,UAAI,CAACD,CAAL,EAAQ,OAAOD,KAAP;AACR,aAAUC,EAAE,CAAF,CAAV,cAAkBA,EAAE,CAAF,CAAlB;AACD;;;8BAESZ,K,EAAOc,U,EAAY;AAC3B,aAAOC,MAAMC,OAAN,CAAchB,MAAMS,mBAApB,IACHT,MAAMS,mBAAN,CAA0BQ,SAA1B,CAAoC;AAAA,YAAEC,IAAF,QAAEA,IAAF;AAAA,eAAYA,SAASJ,UAArB;AAAA,OAApC,CADG,GAEH,CAAC,CAFL;AAGD;;;8BAESd,K,EAAOc,U,EAAY;AAC3B,UAAMK,MAAM,KAAKb,SAAL,CAAeN,KAAf,EAAsBc,UAAtB,CAAZ;AACA,aAAOK,MAAM,CAAN,GAAU1B,SAAV,GAAsBO,MAAMS,mBAAN,CAA0BU,GAA1B,EAA+BT,KAA5D;AACD;;;4BAEOV,K,EAAOc,U,EAAYJ,K,EAAO;AAChC,UAAIK,MAAMC,OAAN,CAAchB,MAAMS,mBAApB,CAAJ,EAA8C;AAC5C,YAAMU,MAAMnB,MAAMS,mBAAN,CAA0BQ,SAA1B,CAAoC;AAAA,cAAEC,IAAF,SAAEA,IAAF;AAAA,iBAAYA,SAASJ,UAArB;AAAA,SAApC,CAAZ;AACA,YAAIK,OAAO,CAAX,EAAc;AACZnB,gBAAMS,mBAAN,CAA0BU,GAA1B,EAA+BT,KAA/B,GAAuCA,KAAvC;AACA;AACD;AACF,OAND,MAMO;AACLV,cAAMS,mBAAN,GAA4B,EAA5B;AACD;AACDT,YAAMS,mBAAN,CAA0BW,IAA1B,CAA+B,EAAEF,MAAMJ,UAAR,EAAoBJ,OAAOA,KAA3B,EAA/B;AACD;;;sCAEiBT,K,EAAO;AACvB,aAAOA,MAAMoB,OAAN,CAAc,YAAd,EAA4B,EAA5B,CAAP;AACD;;;kCAEarB,K,EAAOsB,E,EAAI;AACvB,UAAMC,SAAS,KAAKC,iBAAL,CAAuBxB,MAAMC,KAA7B,CAAf;AACAD,YAAMC,KAAN,GAAeqB,gBAAS,KAAKG,WAAL,CAAiBH,EAAjB,CAAT,cAAiCC,MAAjC,GAA4CA,MAA3D;AACD;;;4BAEO1B,G,EAAK;AACX,UAAM6B,OAAOrC,KAAKS,YAAL,CAAkBK,IAAlB,CAAuBN,GAAvB,CAAb;AACA,UAAI,CAACkB,MAAMC,OAAN,CAAcU,IAAd,CAAD,IAAwBA,KAAKhC,MAAL,GAAc,CAA1C,EAA6C,OAAO,IAAP,CAFlC,CAE+C;;AAF/C,iCAGuBgC,IAHvB;AAAA,UAGDC,KAHC;AAAA,UAGMC,MAHN;AAAA,UAGcC,IAHd;;AAIX,UAAMC,IAAI,IAAIC,IAAJ,CAASpC,SAASgC,KAAT,CAAT,EAA0BhC,SAASiC,MAAT,IAAmB,CAA7C,EAAgDC,SAASpC,SAAT,GAAqB,CAArB,GAAyBE,SAASkC,IAAT,CAAzE,CAAV;AACA,UAAIA,SAASpC,SAAb,EAAwB;AAAE;AACxBqC,UAAEE,QAAF,CAAWF,EAAEG,QAAF,KAAe,CAA1B;AACAH,UAAEI,OAAF,CAAUJ,EAAEK,OAAF,KAAc,CAAxB;AACD;AACD,aAAOL,CAAP;AACD;;AAED;;;;;;;;+BAKWM,K,EAAO;AAChB,UAAMvC,MAAMuC,MAAMC,IAAN,EAAZ;AACA,UAAIC,aAAJ;AACA,UAAMC,YAAY1C,IAAIgB,KAAJ,CAAU,SAAV,KAAwBkB,KAAKS,KAAL,CAAWF,OAAOzC,IAAIwB,OAAJ,CAAY,iBAAZ,EAA+B,QAA/B,CAAlB,CAA1C;AACA,aAAOkB,aAAa,IAAIR,IAAJ,CAASO,IAAT,CAApB;AACD;;;gCAEWhB,E,EAAI;AACd,aAAOA,cAAcS,IAAd,GACH,CACET,GAAGmB,WAAH,EADF,EAEE,CAAC,QAAQnB,GAAGW,QAAH,KAAc,CAAtB,CAAD,EAA2BS,KAA3B,CAAiC,CAAC,CAAlC,CAFF,EAGE,CAAC,OAAOpB,GAAGa,OAAH,EAAR,EAAsBO,KAAtB,CAA4B,CAAC,CAA7B,CAHF,EAIEC,IAJF,CAIO,GAJP,CADG,GAMHC,OAAOtB,EAAP,CANJ;AAOD;;;2BAEMuB,I,EAAM;AACX,UAAMC,eAAe,CAAC,CAAD,EAAI,EAAJ,CAArB,CADW,CACmB;AAC9B,aAAQ,OAAOD,IAAP,KAAgB,QAAjB,IAA8BA,KAAKhC,KAAL,CAAW,OAAX,CAA9B,IAAqDiC,aAAaC,QAAb,CAAsBF,KAAKnD,MAA3B,CAA5D;AACD;;;;;;AAxIkBL,I,CAGZkB,Y,GAAe;AACpByC,SAAO,UADa;AAEpBxC,cAAY,eAFQ;AAGpByC,WAAS,OAHW;AAIpBC,sBAAoB,WAJA,E;AAHH7D,I,CAWZ8D,Y,GAAe,M;AAXH9D,I,CAcZS,Y,GAAe,IAAIsD,MAAJ,4DAA0D/D,KAAK8D,YAA/D,O;kBAdH9D,I","file":"Base.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nexport default class Base {\n\n  /** optional attributes の name値 */\n  static OPTION_NAMES = {\n    LIMIT: '賞味期限（消費）',\n    LIMIT_DATE: '賞味（消費）期限（日付型）',\n    KEYWORD: 'キーワード',\n    PLACE_OF_FOODDRIVE: 'フードドライブ場所',\n  }\n\n  /** 日時期限なし文字列 */\n  static UNLIMIT_DATE = '期限なし';\n\n  /** 日時フォーマット正規表現 */\n  static DATE_PATTERN = new RegExp(`^(\\\\d{4})[-/年]?(\\\\d{2})[-/月]?(\\\\d{2})?\\\\D?|^${Base.UNLIMIT_DATE}$`);\n\n  description() {\n  }\n\n  isTarget() {\n    return false;\n  }\n\n  editOne() {\n  }\n\n  preEdit() {\n    return Promise.resolve();\n  }\n\n  toNum(val) {\n    if (typeof val === 'number') return val;\n    if (typeof val !== 'string') {\n      return undefined;\n    }\n    if (val.length === 0) return 0;\n    try {\n      return parseInt(val, 10);\n    } catch (e) {\n      return undefined;\n    }\n  }\n\n  _isLimitStr(str) {\n    return str && Base.DATE_PATTERN.test(str);\n  }\n\n  _isLimitIntTitle(zaico) {\n    if (typeof zaico.title !== 'string' || !zaico.title) return false;\n    const res = /^【([^】]+)】/.exec(zaico.title);\n    // if (res) console.log('******', res[0]);\n    return res && this._isLimitStr(res[1]);\n  }\n\n  _getLimit(zaico) {\n    const limitIndex = this._optIndex(zaico, Base.OPTION_NAMES.LIMIT_DATE);\n    return limitIndex >= 0 && zaico.optional_attributes[limitIndex].value || '';\n  }\n\n  _limitStr2CategoryStr(limit) {\n    let m = limit.match(/^(\\d+)年(\\d+)月/);\n    if (!m) m = limit.match(/^(\\d{4})(\\d{2})\\d{2}/);\n    if (!m) return limit;\n    return `${m[1]}年${m[2]}月`;\n  }\n\n  _optIndex(zaico, targetName) {\n    return Array.isArray(zaico.optional_attributes)\n      ? zaico.optional_attributes.findIndex(({name}) => name === targetName)\n      : -1;\n  }\n\n  _optValue(zaico, targetName) {\n    const idx = this._optIndex(zaico, targetName);\n    return idx < 0 ? undefined : zaico.optional_attributes[idx].value;\n  }\n\n  _optSet(zaico, targetName, value) {\n    if (Array.isArray(zaico.optional_attributes)) {\n      const idx = zaico.optional_attributes.findIndex(({name}) => name === targetName);\n      if (idx >= 0) {\n        zaico.optional_attributes[idx].value = value;\n        return;\n      }\n    } else {\n      zaico.optional_attributes = [];\n    }\n    zaico.optional_attributes.push({ name: targetName, value: value });\n  }\n\n  _titleWithoutDate(title) {\n    return title.replace(/^【[^】]+】 */, '');\n  }\n\n  _setTitleDate(zaico, dt) {\n    const nTitle = this._titleWithoutDate(zaico.title);\n    zaico.title =  dt ? `【${this._formatDate(dt)}】${nTitle}` : nTitle;\n  }\n\n  _toDate(str) {\n    const mArr = Base.DATE_PATTERN.exec(str);\n    if (!Array.isArray(mArr) || mArr.length < 4) return null; // 日時フォーマットに合致しないか期限なし\n    const [ , syear, smonth, sday ] = mArr;\n    const d = new Date(parseInt(syear), parseInt(smonth) - 1, sday === undefined ? 1 : parseInt(sday));\n    if (sday === undefined) { // year, monthのみ\n      d.setMonth(d.getMonth() + 1);\n      d.setDate(d.getDate() - 1);\n    }\n    return d;\n  }\n\n  /**\n   * 旧日時フォーマット（数値８桁）から Date を作成して返します。\n   * @param {String} dtStr 日時文字列\n   * @return {Date|null} フォーマットが正しい場合 Date を返し、それ以外は falthy 値を返します。\n   */\n  _toDateOld(dtStr) {\n    const str = dtStr.trim();\n    let dstr;\n    const fmtIsDate = str.match(/^\\d{8}$/) && Date.parse(dstr = str.replace(/^(\\d{4})(\\d{2})/, '$1/$2/'));\n    return fmtIsDate && new Date(dstr);\n  }\n\n  _formatDate(dt) {\n    return dt instanceof Date\n      ? [\n          dt.getFullYear(),\n          ('00' + (dt.getMonth()+1)).slice(-2),\n          ('00' + dt.getDate()).slice(-2)\n        ].join('/')\n      : String(dt);\n  }\n\n  _isJan(code) {\n    const janLengthArr = [8, 13]; // JANの長さ定義\n    return (typeof code === 'string') && code.match(/^\\d+$/) && janLengthArr.includes(code.length);\n  }\n}\n"]}