{"version":3,"sources":["../../src/usecases/DateNormalize.js"],"names":["DateNormalize","regIsDateNumOnly","regStartDateNumWithBracket","zaico","title","opt","exec","_getLimit","res","_setTitleDate","_optSet","Base","OPTION_NAMES","LIMIT_DATE"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;IAEqBA,a;;;;;;;;;;;;;;oMAEnBC,gB,GAAmB,yB,QACnBC,0B,GAA6B,+B;;;;;kCAEf;AACZ;AAMD;;;6BAEQC,K,EAAO;AACd;AADc,UAENC,KAFM,GAEID,KAFJ,CAENC,KAFM;;AAGd,UAAIC,YAAJ;AACA,aAAO,OAAOD,KAAP,KAAiB,QAAjB,IAA6B,KAAKF,0BAAL,CAAgCI,IAAhC,CAAqCF,KAArC,CAA7B,IACF,CAACC,MAAM,KAAKE,SAAL,CAAeJ,KAAf,CAAP,KAAiC,KAAKF,gBAAL,CAAsBK,IAAtB,CAA2BD,GAA3B,CADtC;AAED;;;4BAEOF,K,EAAO;AAAA,UACLC,KADK,GACKD,KADL,CACLC,KADK;;AAEb,UAAIC,YAAJ;AAAA,UAASG,YAAT;AACA,UAAI,OAAOJ,KAAP,KAAiB,QAAjB,KAA8BI,MAAM,KAAKN,0BAAL,CAAgCI,IAAhC,CAAqCF,KAArC,CAApC,CAAJ,EAAsF;AACpF,aAAKK,aAAL,CAAmBN,KAAnB,EAA6BK,IAAI,CAAJ,CAA7B,SAAuCA,IAAI,CAAJ,CAAvC,SAAiDA,IAAI,CAAJ,CAAjD;AACD;AACD,UAAI,CAACH,MAAM,KAAKE,SAAL,CAAeJ,KAAf,CAAP,MAAkCK,MAAM,KAAKP,gBAAL,CAAsBK,IAAtB,CAA2BD,GAA3B,CAAxC,CAAJ,EAA8E;AAC5E,aAAKK,OAAL,CAAaP,KAAb,EAAoBQ,eAAKC,YAAL,CAAkBC,UAAtC,EAAqDL,IAAI,CAAJ,CAArD,SAA+DA,IAAI,CAAJ,CAA/D,SAAyEA,IAAI,CAAJ,CAAzE;AACD;AACD,aAAOL,KAAP;AACD;;;;EAhCwCQ,c;;kBAAtBX,a","file":"DateNormalize.js","sourcesContent":["import Base from './Base';\n\nexport default class DateNormalize extends Base {\n\n  regIsDateNumOnly = /^(\\d{4})(\\d{2})(\\d{2})$/;\n  regStartDateNumWithBracket = /^【(\\d{4})(\\d{2})(\\d{2})】(.*)$/;\n\n  description() {\n    return `\\\n【DateNormalize】\n★日付の８桁数値を正規化(YYYY/MM/DD)\n(1) オプション属性(optional_attributes[])のnameが\"賞味（消費）期限（日付型）\"の value 値全体文字列が８桁数値のものを正規化\n(2) titleが【数値８桁】で始まっているものを正規化\n`;\n  }\n\n  isTarget(zaico) {\n    // カテゴリ\n    const { title } = zaico;\n    let opt;\n    return typeof title === 'string' && this.regStartDateNumWithBracket.exec(title)\n      || (opt = this._getLimit(zaico)) && this.regIsDateNumOnly.exec(opt);\n  }\n\n  editOne(zaico) {\n    const { title } = zaico;\n    let opt, res;\n    if (typeof title === 'string' && (res = this.regStartDateNumWithBracket.exec(title))) {\n      this._setTitleDate(zaico, `${res[1]}/${res[2]}/${res[3]}`);\n    }\n    if ((opt = this._getLimit(zaico)) && (res = this.regIsDateNumOnly.exec(opt))) {\n      this._optSet(zaico, Base.OPTION_NAMES.LIMIT_DATE, `${res[1]}/${res[2]}/${res[3]}`);\n    }\n    return zaico;\n  }\n}\n"]}