{"version":3,"sources":["../../src/usecases/EditAll.js"],"names":["EditAll","editors","console","log","map","e","description","join","targetPath","arr","_path2Json","Array","isArray","Error","res","_editAll","length","dir","path","dirname","base","basename","npath","_json2Path","process","env","FDKCACHEEDIT_OUTPUTORG","orgPath","idSet","Set","String","info","id","filter","has","zaicos","zaico","idx","isTarget","title","nZaico","reduce","z","editOne","_cloneDeepJsonObj","_equalsDeep","undefined","v","obj","JSON","parse","stringify","o1","o2","json","fs","writeFileSync","existsSync","readFileSync"],"mappings":"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","file":"EditAll.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nexport default class EditAll {\n\n  constructor(editors) {\n    this.editors = editors;\n  }\n\n  description() {\n    console.log(this.editors.map(e => e.description()).join('\\n'));\n  }\n\n  edit(targetPath) {\n    const arr = this._path2Json(targetPath);\n    if (!Array.isArray(arr)) throw new Error(`ファイル ${targetPath} が配列形式になっていません。`);\n    const res = this._editAll(arr);\n    if (res && res.length) {\n      const dir = path.dirname(targetPath);\n      const base = path.basename(targetPath);\n      const npath = path.join(dir, 'edited_' + base);\n      this._json2Path(npath, res);\n      if (process.env.FDKCACHEEDIT_OUTPUTORG) {\n        const orgPath = path.join(dir, 'org_' + base);\n        const idSet = new Set(res.map(info => String(info.id)));\n        this._json2Path(orgPath, arr.filter(info => idSet.has(String(info.id))));\n      }\n    } else {\n      console.log('編集したデータはありませんでした');\n    }\n  }\n\n  _editAll(zaicos) {\n    return zaicos.map((zaico, idx) => {\n      const editors = this.editors.filter(e => e.isTarget(zaico));\n      if (editors.length) {\n        console.log(`[${idx+1}/${zaicos.length}] ${zaico.title}`);\n        const nZaico = editors.reduce((z, e) => e.editOne(z), this._cloneDeepJsonObj(zaico));\n        if (!this._equalsDeep(zaico, nZaico)) return nZaico;\n      }\n      return undefined;\n    }).filter(v => v);\n  }\n\n  _cloneDeepJsonObj(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  _equalsDeep(o1, o2) {\n    return JSON.stringify(o1) === JSON.stringify(o2);\n  }\n\n  _json2path(targetPath, json) {\n    fs.writeFileSync(targetPath, JSON.stringify(json, null, 2));\n  }\n\n  _path2Json(targetPath) {\n    if (!fs.existsSync(targetPath)) {\n      throw new Error(`ファイル ${targetPath} が存在しません。パスを確認してください。`);\n    }\n    try {\n      console.log(`read... ${targetPath}`);\n      return JSON.parse(fs.readFileSync(targetPath, 'utf-8'));\n    } catch (e) {\n      throw new Error(`ファイル ${targetPath} の JSON 読み込みに失敗しました ${e}`);\n    }\n  }\n\n  _json2Path(targetPath, json) {\n    try {\n      console.log(`write... ${targetPath}`);\n      return fs.writeFileSync(targetPath, JSON.stringify(json, null, 2));\n    } catch (e) {\n      throw new Error(`ファイル ${targetPath} の JSON 書き込みに失敗しました ${e}`);\n    }\n  }\n\n}\n"]}