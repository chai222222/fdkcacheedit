{"version":3,"sources":["../../src/usecases/EditAll.js"],"names":["EditAll","editors","length","Error","console","log","map","e","description","join","targetPath","_preEditAll","then","_editTarget","catch","JSON","stringify","arr","_path2Json","Array","isArray","res","_editAll","dir","path","dirname","base","basename","npath","_json2Path","process","env","FDKCACHEEDIT_OUTPUTORG","orgPath","idSet","Set","String","info","id","filter","has","Promise","all","preEdit","zaicos","zaico","idx","isTarget","title","nZaico","reduce","z","editOne","_cloneDeepJsonObj","_equalsDeep","undefined","v","obj","parse","o1","o2","json","fs","writeFileSync","existsSync","readFileSync"],"mappings":"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","file":"EditAll.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nexport default class EditAll {\n\n  constructor(editors) {\n    this.editors = editors;\n    if (!editors.length) {\n      throw new Error('コマンドが指定されていません');\n    }\n  }\n\n  description() {\n    console.log(this.editors.map(e => e.description()).join('\\n'));\n  }\n\n  edit(targetPath) {\n    this._preEditAll().then(() => {\n      this._editTarget(targetPath);\n    }).catch(e => {\n      console.log('前処理で失敗しました', JSON.stringify(e, null, 2));\n    });\n  }\n\n  _editTarget(targetPath) {\n    const arr = this._path2Json(targetPath);\n    if (!Array.isArray(arr)) throw new Error(`ファイル ${targetPath} が配列形式になっていません。`);\n    const res = this._editAll(arr);\n    if (res && res.length) {\n      const dir = path.dirname(targetPath);\n      const base = path.basename(targetPath);\n      const npath = path.join(dir, 'edited_' + base);\n      this._json2Path(npath, res);\n      if (process.env.FDKCACHEEDIT_OUTPUTORG) {\n        const orgPath = path.join(dir, 'org_' + base);\n        const idSet = new Set(res.map(info => String(info.id)));\n        this._json2Path(orgPath, arr.filter(info => idSet.has(String(info.id))));\n      }\n    } else {\n      console.log('編集したデータはありませんでした');\n    }\n  }\n\n  _preEditAll() {\n    return Promise.all(this.editors.map(e => e.preEdit()));\n  }\n\n  _editAll(zaicos) {\n    return zaicos.map((zaico, idx) => {\n      const editors = this.editors.filter(e => e.isTarget(zaico));\n      if (editors.length) {\n        console.log(`[${idx+1}/${zaicos.length}] ${zaico.title}`);\n        const nZaico = editors.reduce((z, e) => e.editOne(z), this._cloneDeepJsonObj(zaico));\n        if (!this._equalsDeep(zaico, nZaico)) return nZaico;\n      }\n      return undefined;\n    }).filter(v => v);\n  }\n\n  _cloneDeepJsonObj(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  _equalsDeep(o1, o2) {\n    return JSON.stringify(o1) === JSON.stringify(o2);\n  }\n\n  _json2path(targetPath, json) {\n    fs.writeFileSync(targetPath, JSON.stringify(json, null, 2));\n  }\n\n  _path2Json(targetPath) {\n    if (!fs.existsSync(targetPath)) {\n      throw new Error(`ファイル ${targetPath} が存在しません。パスを確認してください。`);\n    }\n    try {\n      console.log(`read... ${targetPath}`);\n      return JSON.parse(fs.readFileSync(targetPath, 'utf-8'));\n    } catch (e) {\n      throw new Error(`ファイル ${targetPath} の JSON 読み込みに失敗しました ${e}`);\n    }\n  }\n\n  _json2Path(targetPath, json) {\n    try {\n      console.log(`write... ${targetPath}`);\n      return fs.writeFileSync(targetPath, JSON.stringify(json, null, 2));\n    } catch (e) {\n      throw new Error(`ファイル ${targetPath} の JSON 書き込みに失敗しました ${e}`);\n    }\n  }\n\n}\n"]}