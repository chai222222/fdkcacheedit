{"version":3,"sources":["../../src/usecases/CsvEdit.js"],"names":["CsvEdit","initCsvDef","Promise","resolve","reject","warn","s","console","error","fs","createReadStream","csvdef","input","pipe","iconv","decodeStream","encodeStream","csv","parse","transform","record","csvHeader","ukey","getUniquekeyStr","test","csvData","csvColumns","reduce","acc","col","idx","on","err","Error","uniquekey","map","undefined","join","JSON","readFileSync","CSV_DEFINE_FILE","existsSync","mapping","Array","isArray","length","update","delete","newArrayValue","zaico","zaicoValue","replace","typeChecker","zaicoValueByPath","zaicoPath","path","result","jp","query","uperr","some","val","zval","parseInt","delerr","delInfo","column","regexp","re","RegExp","key","zaicoUniquekeyStr","isUpdateTarget","isDeleteTarget","id","v","zv","newVal","value","e","nav","find","narr","columns","includes","arrayPath","template","arr","push","Base"],"mappings":"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","file":"CsvEdit.js","sourcesContent":["import fs from 'fs';\nimport iconv from 'iconv-lite';\nimport csv from 'csv';\nimport jp from 'jsonpath';\n\nimport Base from './Base';\n\nexport default class CsvEdit extends Base {\n\n  static CSV_DEFINE_FILE = './csv_define.json';\n\n  preEdit() {\n    this.initCsvDef();\n    return new Promise((resolve, reject) => {\n      const warn = (s) => { console.error(`CSV：SKIP：${s}`); };\n      fs.createReadStream(this.csvdef.input)\n        .pipe(iconv.decodeStream('SJIS'))\n        .pipe(iconv.encodeStream('UTF-8'))\n        .pipe(csv.parse())\n        .pipe(csv.transform((record) => {\n          if (this.csvHeader) {\n            const ukey = this.getUniquekeyStr(record);\n            if (/^:*$/.test(ukey)) {\n              warn(`ユニークカラムにデータがありません[${ukey}]`);\n            } else if (this.csvData[ukey]) {\n              warn(`[${ukey}]が重複しています`);\n            } else {\n              this.csvData[ukey] = record;\n            }\n          } else {\n            this.csvColumns = record;\n            this.csvHeader = record.reduce((acc, col, idx) => ({ ...acc, [col]: idx }), {});\n            this.csvData = {};\n          }\n        }))\n        .on('finish', () => resolve())\n        .on('error', err => reject(err));\n    });\n  }\n\n  getUniquekeyStr(record) {\n    const err = (s) => { throw new Error(`CSV定義ファイル(uniquekey)：${s}`); };\n    return this.csvdef.uniquekey.map(col => {\n      if (!col || this.csvHeader[col] === undefined) err('カラム文字列が不正です');\n      return record[this.csvHeader[col]];\n    }).join(':');\n  }\n\n  initCsvDef() {\n    this.csvdef = JSON.parse(fs.readFileSync(CsvEdit.CSV_DEFINE_FILE, 'utf-8'));\n    const err = (s) => { throw new Error(`CSV定義ファイル：${s}`); };\n    // 簡易チェック。そのうちちゃんとスキーマ定義にしたほうが良い\n    if (typeof this.csvdef.input !== 'string') err('inputがStringではありません');\n    if (!fs.existsSync(this.csvdef.input)) err(`inputファイル(${this.csvdef.input})が存在しません`);\n    if (typeof this.csvdef.mapping !== 'object') err('mappingがObjectではありません');\n    if (!Array.isArray(this.csvdef.uniquekey)) err('uniquekeyがArrayではありません');\n    if (!this.csvdef.uniquekey.length) err('uniquekeyの要素がありません');\n    if (!Array.isArray(this.csvdef.update)) err('updateがArrayではありません');\n    if (!Array.isArray(this.csvdef.delete)) err('deleteがArrayではありません');\n    if (!Array.isArray(this.csvdef.newArrayValue)) err('newArrayValueがArrayではありません');\n  }\n\n  zaicoUniquekeyStr(zaico) {\n    return this.csvdef.uniquekey.map(col => `${this.zaicoValue(zaico, col)}`).join(':');\n  }\n\n  zaicoPath(col) {\n    const err = (s) => { throw new Error(`CSV定義ファイル(update)：${s}`); };\n    if (this.csvdef.mapping[col] === undefined) err(`カラム[${col}]がmappingに定義されていません`);\n    return this.csvdef.mapping[col].replace('{key}', col);\n  }\n\n  zaicoValue(zaico, col, typeChecker = () => true) {\n    return this.zaicoValueByPath(zaico, this.zaicoPath(col), typeChecker);\n  }\n\n  zaicoValueByPath(zaico, path, typeChecker = () => true) {\n    const result = jp.query(zaico, path, 1);\n    return result.length && typeChecker(result[0]) ? result[0] : undefined;\n  }\n\n\n  description() {\n    return `\\\n【CsvEdit】\n★CSVファイル(${CsvEdit.CSV_DEFINE_FILE}のinputへ記述})のデータを読み込んで更新\n(1) 更新データが zaico の値と違う場合上書き\n(2) 削除指定データがある場合、削除用データを作成\n`;\n  }\n\n  isUpdateTarget(zaico, record) {\n    const uperr = (s) => { throw new Error(`CSV定義ファイル(update)：${s}`); };\n    return this.csvdef.update.some(col => {\n      const val = record[this.csvHeader[col]];\n      const zval = this.zaicoValue(zaico, col);\n      if (zval === undefined) return false;\n      if (typeof zval === 'number') return parseInt(val, 10) !== zval;\n      if (typeof zval === 'string') return val !== zval;\n      if (zval === null) return true; // zaico値が null の場合には文字列として上書きさせる\n      return false; // 数値・文字列以外は現状更新させない\n    });\n  }\n\n  isDeleteTarget(zaico, record) {\n    const delerr = (s) => { throw new Error(`CSV定義ファイル(delete)：${s}`); };\n    return this.csvdef.delete.some(delInfo => {\n      if (typeof delInfo.column !== 'string') delerr(`column定義が不正です(column)`);\n      if (typeof delInfo.regexp !== 'string') delerr(`column定義が不正です(regexp)`);\n      const re = new RegExp(delInfo.regexp);\n      const val = record[this.csvHeader[delInfo.column]];\n      return re.test(`${val}`);\n    });\n  }\n\n  isTarget(zaico) {\n    const key = this.zaicoUniquekeyStr(zaico);\n    const record = this.csvData[key];\n    if (!record) return false; // zaicoのデータがinputのcsvには存在しない\n    return this.isUpdateTarget(zaico, record) || this.isDeleteTarget(zaico, record);\n  }\n\n  editOne(zaico) {\n    const key = this.zaicoUniquekeyStr(zaico);\n    const record = this.csvData[key];\n    if (!record) return zaico; // zaicoのデータがinputのcsvには存在しない\n    if (this.isDeleteTarget(zaico, record)) {\n      return { id: zaico.id };\n    }\n    // update\n    return this.csvdef.update.reduce((acc, col) => {\n      const v = this.csvData[this.zaicoUniquekeyStr(zaico)][this.csvHeader[col]];\n      const zv = this.zaicoValue(zaico, col);\n      if (v != zv) {\n        const newVal = typeof zv === 'number' ? parseInt(v) : v;\n        try {\n          jp.value(acc, this.zaicoPath(col), newVal);\n        } catch (e) {\n          // 配列値への設定不可エラーだと思うので、新しい配列を追加するロジックを行う\n          const nav = this.csvdef.newArrayValue.find(narr => narr.columns.includes(col));\n          if (nav) { // 定義がある\n            const { arrayPath, template } = nav;\n            const arr = this.zaicoValueByPath(acc, arrayPath, Array.isArray) || [];\n            arr.push(JSON.parse(template.replace('{key}', col).replace('{value}', newVal)));\n            jp.value(acc, arrayPath, arr);\n          }\n        }\n      }\n      return acc;\n    }, zaico);\n  }\n}\n"]}