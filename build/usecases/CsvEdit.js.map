{"version":3,"sources":["../../src/usecases/CsvEdit.js"],"names":["CsvEdit","Promise","resolve","reject","initCsvDef","fs","createReadStream","pipe","iconv","decodeStream","encodeStream","csv","parse","transform","record","csvHeader","ukey","getUniquekeyStr","csvData","csvColumns","reduce","acc","col","idx","console","log","on","err","s","Error","csvdef","uniquekey","map","undefined","join","JSON","readFileSync","CSV_DEFINE_FILE","input","exists","mapping","Array","isArray","length","update","delete","zaico","zaicoValue","replace","jp","query","zaicoPath","uperr","some","key","zaicoUniquekeyStr","val","zval","parseInt","delerr","delInfo","column","regexp","re","RegExp","test","isUpdateTarget","isDeleteTarget","id","v","zv","value","Base"],"mappings":"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","file":"CsvEdit.js","sourcesContent":["import fs from 'fs';\nimport iconv from 'iconv-lite';\nimport csv from 'csv';\nimport jp from 'jsonpath';\n\nimport Base from './Base';\n\nexport default class CsvEdit extends Base {\n\n  static CSV_DEFINE_FILE = './csv_define.json';\n\n  preEdit() {\n    return new Promise((resolve, reject) => {\n      this.initCsvDef();\n      fs.createReadStream('20200227エースコック.csv')\n        .pipe(iconv.decodeStream('SJIS'))\n        .pipe(iconv.encodeStream('UTF-8'))\n        .pipe(csv.parse())\n        .pipe(csv.transform(function(record) {\n          if (this.csvHeader) {\n            const ukey = this.getUniquekeyStr(record);\n            this.csvData[ukey] = record;\n          } else {\n            this.csvColumns = record;\n            this.csvHeader = record.reduce((acc, col, idx) => ({ ...acc, [col]: idx }), {});\n            this.csvData = {};\n          }\n          console.log('pipe', record);\n        }))\n        .on('end', () => resolve())\n        .on('error', err => reject(err));\n    });\n  }\n\n  getUniquekeyStr(record) {\n    const err = (s) => { throw new Error(`CSV定義ファイル(uniquekey)：${s}`); };\n    return this.csvdef.uniquekey.map(col => {\n      if (!col || this.csvHeader[col] === undefined) err('カラム文字列が不正です');\n      return record[this.csvHeader[col]];\n    }).join(':');\n  }\n\n  initCsvDef() {\n    this.csvdef = JSON.parse(fs.readFileSync(CsvEdit.CSV_DEFINE_FILE, 'utf-8'));\n    const err = (s) => { throw new Error(`CSV定義ファイル：${s}`); };\n    if (typeof this.csvdef.input !== 'string') err('inputがStringではありません');\n    if (!fs.exists(this.csvdef.input)) err('inputファイルが存在しません');\n    if (typeof this.csvdef.mapping !== 'object') err('mappingがObjectではありません');\n    if (!Array.isArray(this.csvdef.uniquekey)) err('uniquekeyがArrayではありません');\n    if (!this.csvdef.uniquekey.length) err('uniquekeyの要素がありません');\n    if (!Array.isArray(this.csvdef.update)) err('updateがArrayではありません');\n    if (!Array.isArray(this.csvdef.delete)) err('deleteがArrayではありません');\n  }\n\n  zaicoUniquekeyStr(zaico) {\n    return this.csvdef.uniquekey.map(col => `${this.zaicoValue(zaico, col)}`).join(':');\n  }\n\n  zaicoPath(col) {\n    const err = (s) => { throw new Error(`CSV定義ファイル(update)：${s}`); };\n    if (this.csvdef.mapping[col] === undefined) err(`カラム[${col}]がmappingに定義されていません`);\n    return this.csvdef.mapping[col].replace('{key}', col);\n  }\n\n  zaicoValue(zaico, col) {\n    return jp.query(zaico, this.zaicoPath(col));\n  }\n\n  description() {\n    return `\\\n【CsvEdit】\n★CSVファイルのデータ\n(1) 更新データが zaico の値と違う場合上書き\n(2) 削除指定データがある場合、削除用データを作成\n`;\n  }\n\n  isUpdateTarget(zaico) {\n    const uperr = (s) => { throw new Error(`CSV定義ファイル(update)：${s}`); };\n    return this.csvdef.update.some(col => {\n      const key = this.zaicoUniquekeyStr(zaico);\n      const record = this.csvData[key];\n      if (record === undefined) uperr(`csvデータにキー[${key}]が存在しません`);\n      const val = record[this.csvHeader[col]];\n      const zval = this.zaicoValue(zaico, col);\n      if (!zval) return false;\n      if (typeof zval === 'number') return parseInt(val, 10) !== zval;\n      if (typeof zval === 'string') return val !== zval;\n      return false; // 数値・文字列以外は現状更新させない\n    });\n  }\n\n  isDeleteTarget(zaico) {\n    const delerr = (s) => { throw new Error(`CSV定義ファイル(delete)：${s}`); };\n    return this.csvdef.delete.some(delInfo => {\n      if (typeof delInfo.column !== 'string') delerr(`column定義が不正です(column)`);\n      if (typeof delInfo.regexp !== 'string') delerr(`column定義が不正です(regexp)`);\n      const re = new RegExp(delInfo.regexp);\n      const zval = this.zaicoValue(zaico, col);\n      return re.test(`${zval}`);\n    });\n  }\n\n  isTarget(zaico) {\n    return this.isUpdateTarget(zaico) || this.isDeleteTarget(zaico);\n  }\n\n  editOne(zaico) {\n    if (this.isDeleteTarget(zaico)) {\n      return { id: zaico.id };\n    }\n    // update\n    return this.csvdef.update.reduce((acc, col) => {\n      const v = this.csvData[this.zaicoUniquekeyStr()][this.csvHeader[col]];\n      const zv = this.zaicoValue(zaico, col);\n      if (v != zv) jp.value(acc, this.zaicoPath(col), typeof zv === 'number' ? parseInt(v) : v);\n      return acc;\n    }, zaico);\n  }\n}\n"]}